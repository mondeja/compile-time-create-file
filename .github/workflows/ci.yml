name: CI

on:
  pull_request:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-toolchain:
          - stable
          - nightly
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        name: Setup Rust
        with:
          profile: minimal
          toolchain: ${{ matrix.rust-toolchain }}
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ matrix.rust-toolchain }}
      - name: Run
        run: DOC=1 ./test
      - uses: actions/upload-artifact@v2
        with:
          name: cargo-${{ matrix.rust-toolchain }}-test-logs
          path: cargo-test.log
  publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    name: Upload to crates.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        name: Setup Rust
        with:
          profile: minimal
          toolchain: stable
      - name: Configure publish
        run: |
          git config --local user.email 41898282+github-actions[bot]@users.noreply.github.com
          git config --local user.name github-actions[bot]
          cargo install cargo-release
          cargo login ${{ secrets.CRATES_TOKEN }}
      - name: Publish
        run: |
          cargo release "$(< Cargo.toml grep version | head -n 1 | cut -d '"' -f2)" --no-confirm --skip-push
          cargo release --no-confirm --skip-push --execute
  release:
    name: Release
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get tag metadata
        id: tag
        run: |
          TAG_TITLE=${GITHUB_REF#refs/*/}
          echo ::set-output name=title::$TAG_TITLE
          git -c protocol.version=2 fetch --prune --progress \
            --no-recurse-submodules origin \
            +refs/heads/*:refs/remotes/origin/* +refs/tags/*:refs/tags/*
          TAG_BODY="$(git tag -l --format='%(contents)' $TAG_TITLE)"
          TAG_BODY="${TAG_BODY//'%'/'%25'}"
          TAG_BODY="${TAG_BODY//$'\n'/'%0A'}"
          TAG_BODY="${TAG_BODY//$'\r'/'%0D'}"
          echo ::set-output name=body::$TAG_BODY
      - name: Create Release
        uses: actions/create-release@v1.1.4
        id: create-release
        with:
          tag_name: ${{ steps.tag.outputs.title }}
          release_name: ${{ steps.tag.outputs.title }}
          body: ${{ steps.tag.outputs.body }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
